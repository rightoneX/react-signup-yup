{"ast":null,"code":"var _jsxFileName = \"/home/sr/Documents/workflow/_test/react-login-form/react-signup/src/components/Form1.js\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\n// const schema = yup\n//   .object({\n//     email: yup.string().email().required(),\n//     password: yup.string().password().min(8).required(),\n//   })\n//   .required()\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\n// min 5 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\n\nconst schema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"Required\"),\n  password: yup.string().matches(passwordRules, {\n    message: \"Please create a stronger password\"\n  }).required(\"Required\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\").required(\"Required\")\n});\nexport default function App() {\n  _s();\n  var _errors$email, _errors$password, _errors$confirmPasswo;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = data => console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"confirmPassword\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useForm","yupResolver","yup","jsxDEV","_jsxDEV","passwordRules","schema","object","shape","email","string","required","password","matches","message","confirmPassword","oneOf","ref","App","_s","_errors$email","_errors$password","_errors$confirmPasswo","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/sr/Documents/workflow/_test/react-login-form/react-signup/src/components/Form1.js"],"sourcesContent":["import { useForm } from \"react-hook-form\"\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport * as yup from \"yup\"\n\n\n// const schema = yup\n//   .object({\n//     email: yup.string().email().required(),\n//     password: yup.string().password().min(8).required(),\n//   })\n//   .required()\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\n// min 5 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\n\nconst schema = yup.object().shape({\n  email: yup.string().email(\"Please enter a valid email\").required(\"Required\"),\n  password: yup\n    .string()\n    .matches(passwordRules, { message: \"Please create a stronger password\" })\n    .required(\"Required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Required\"),\n});\n\n\n\n\n\nexport default function App() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  })\n\n  const onSubmit = (data) => console.log(data)\n\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n\n      <input {...register(\"email\")} />\n      <p>{errors.email?.message}</p>\n\n\n      <input {...register(\"password\")} />\n      <p>{errors.password?.message}</p>\n\n\n      <input {...register(\"confirmPassword\")} />\n      <p>{errors.confirmPassword?.message}</p>\n\n      <input type=\"submit\" />\n    </form>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}